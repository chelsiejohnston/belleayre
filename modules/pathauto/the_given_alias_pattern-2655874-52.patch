diff --git a/src/AliasUniquifier.php b/src/AliasUniquifier.php
index c430f0a..902a03e 100644
--- a/src/AliasUniquifier.php
+++ b/src/AliasUniquifier.php
@@ -171,7 +171,7 @@ class AliasUniquifier implements AliasUniquifierInterface {
       $route = $this->urlMatcher->match($path);
 
       if ($route['_route'] == $this->lastRouteName) {
-        throw new \InvalidArgumentException('The given alias pattern (' . $path . ') always matches the route ' . $this->lastRouteName);
+        throw new \InvalidArgumentException('The path "' . $path . '" collides with the route with identifier ' . $this->lastRouteName . ', whose path is ' . $route['_route_object']->getPath());
       }
 
       $this->lastRouteName = $route['_route'];
diff --git a/src/PathautoGenerator.php b/src/PathautoGenerator.php
index 2037abf..d7e7776 100644
--- a/src/PathautoGenerator.php
+++ b/src/PathautoGenerator.php
@@ -320,7 +320,13 @@ class PathautoGenerator implements PathautoGeneratorInterface {
       }
     }
 
-    $result = $this->createEntityAlias($entity, $op);
+    try {
+      $result = $this->createEntityAlias($entity, $op);
+    }
+    catch (\InvalidArgumentException $e) {
+      drupal_set_message($e->getMessage(), 'error');
+      return NULL;
+    }
 
     // @todo Move this to a method on the pattern plugin.
     if ($type == 'taxonomy_term') {
diff --git a/src/Tests/PathautoNodeWebTest.php b/src/Tests/PathautoNodeWebTest.php
index abbd3a7..6d385a7 100644
--- a/src/Tests/PathautoNodeWebTest.php
+++ b/src/Tests/PathautoNodeWebTest.php
@@ -25,7 +25,7 @@ class PathautoNodeWebTest extends WebTestBase {
    *
    * @var array
    */
-  public static $modules = array('node', 'pathauto', 'views');
+  public static $modules = array('node', 'pathauto', 'views', 'taxonomy', 'pathauto_views_test');
 
   /**
    * Admin user.
@@ -56,7 +56,6 @@ class PathautoNodeWebTest extends WebTestBase {
     $this->drupalLogin($this->adminUser);
 
     $this->createPattern('node', '/content/[node:title]');
-
   }
 
   /**
@@ -288,4 +287,28 @@ class PathautoNodeWebTest extends WebTestBase {
     $this->assertResponse(200);
   }
 
+  /**
+   * Tests that patterns can coexist with routes with arguments.
+   *
+   * A common case is to have a view with a term name as a contextual filter,
+   * and a pattern that matches the view's path.
+   */
+  public function testPatternMatchingDynamicRoute() {
+    $this->drupalLogin($this->rootUser);
+
+    // Create a pattern for nodes that matches with a view path defined at
+    // pathauto_views_test module.
+    $this->createPattern('node', '/articles/[node:title]', -1);
+
+    // Create an article.
+    $edit = array(
+      'title[0][value]' => 'Sample article',
+    );
+    $this->drupalPostForm('node/add/article', $edit, t('Save and publish'));
+
+    // Check that the alias was not created and an alert was shown.
+    $this->assertText('collides with the route with identifier');
+    $this->assertNoAliasExists(array('alias' => '/articles/sample-article'));
+  }
+
 }
diff --git a/tests/modules/pathauto_views_test/config/install/views.view.articles.yml b/tests/modules/pathauto_views_test/config/install/views.view.articles.yml
new file mode 100644
index 0000000..f714a59
--- /dev/null
+++ b/tests/modules/pathauto_views_test/config/install/views.view.articles.yml
@@ -0,0 +1,231 @@
+langcode: en
+status: true
+dependencies:
+  module:
+    - node
+    - taxonomy
+    - user
+id: articles
+label: articles
+module: pathauto_views_test
+description: ''
+tag: ''
+base_table: node_field_data
+base_field: nid
+core: 8.x
+display:
+  default:
+    display_plugin: default
+    id: default
+    display_title: Master
+    position: 0
+    display_options:
+      access:
+        type: perm
+        options:
+          perm: 'access content'
+      cache:
+        type: tag
+        options: {  }
+      query:
+        type: views_query
+        options:
+          disable_sql_rewrite: false
+          distinct: false
+          replica: false
+          query_comment: ''
+          query_tags: {  }
+      exposed_form:
+        type: basic
+        options:
+          submit_button: Apply
+          reset_button: false
+          reset_button_label: Reset
+          exposed_sorts_label: 'Sort by'
+          expose_sort_order: true
+          sort_asc_label: Asc
+          sort_desc_label: Desc
+      pager:
+        type: full
+        options:
+          items_per_page: 10
+          offset: 0
+          id: 0
+          total_pages: null
+          expose:
+            items_per_page: false
+            items_per_page_label: 'Items per page'
+            items_per_page_options: '5, 10, 25, 50'
+            items_per_page_options_all: false
+            items_per_page_options_all_label: '- All -'
+            offset: false
+            offset_label: Offset
+          tags:
+            previous: '‹ Previous'
+            next: 'Next ›'
+            first: '« First'
+            last: 'Last »'
+          quantity: 9
+      style:
+        type: default
+      row:
+        type: 'entity:node'
+        options:
+          view_mode: teaser
+      fields:
+        title:
+          id: title
+          table: node_field_data
+          field: title
+          entity_type: node
+          entity_field: title
+          label: ''
+          alter:
+            alter_text: false
+            make_link: false
+            absolute: false
+            trim: false
+            word_boundary: false
+            ellipsis: false
+            strip_tags: false
+            html: false
+          hide_empty: false
+          empty_zero: false
+          settings:
+            link_to_entity: true
+          plugin_id: field
+          relationship: none
+          group_type: group
+          admin_label: ''
+          exclude: false
+          element_type: ''
+          element_class: ''
+          element_label_type: ''
+          element_label_class: ''
+          element_label_colon: true
+          element_wrapper_type: ''
+          element_wrapper_class: ''
+          element_default_classes: true
+          empty: ''
+          hide_alter_empty: true
+          click_sort_column: value
+          type: string
+          group_column: value
+          group_columns: {  }
+          group_rows: true
+          delta_limit: 0
+          delta_offset: 0
+          delta_reversed: false
+          delta_first_last: false
+          multi_type: separator
+          separator: ', '
+          field_api_classes: false
+      filters:
+        status:
+          value: true
+          table: node_field_data
+          field: status
+          plugin_id: boolean
+          entity_type: node
+          entity_field: status
+          id: status
+          expose:
+            operator: ''
+          group: 1
+        type:
+          id: type
+          table: node_field_data
+          field: type
+          value:
+            article: article
+          entity_type: node
+          entity_field: type
+          plugin_id: bundle
+      sorts:
+        created:
+          id: created
+          table: node_field_data
+          field: created
+          order: DESC
+          entity_type: node
+          entity_field: created
+          plugin_id: date
+          relationship: none
+          group_type: group
+          admin_label: ''
+          exposed: false
+          expose:
+            label: ''
+          granularity: second
+      title: articles
+      header: {  }
+      footer: {  }
+      empty: {  }
+      relationships: {  }
+      arguments:
+        tid:
+          id: tid
+          table: taxonomy_index
+          field: tid
+          relationship: none
+          group_type: group
+          admin_label: ''
+          default_action: ignore
+          exception:
+            value: all
+            title_enable: false
+            title: All
+          title_enable: false
+          title: ''
+          default_argument_type: fixed
+          default_argument_options:
+            argument: ''
+          default_argument_skip_url: false
+          summary_options:
+            base_path: ''
+            count: true
+            items_per_page: 25
+            override: false
+          summary:
+            sort_order: asc
+            number_of_records: 0
+            format: default_summary
+          specify_validation: false
+          validate:
+            type: none
+            fail: 'not found'
+          validate_options: {  }
+          break_phrase: false
+          add_table: false
+          require_value: false
+          reduce_duplicates: false
+          plugin_id: taxonomy_index_tid
+      display_extenders: {  }
+    cache_metadata:
+      max-age: -1
+      contexts:
+        - 'languages:language_content'
+        - 'languages:language_interface'
+        - url
+        - url.query_args
+        - 'user.node_grants:view'
+        - user.permissions
+      tags: {  }
+  page_1:
+    display_plugin: page
+    id: page_1
+    display_title: Page
+    position: 1
+    display_options:
+      display_extenders: {  }
+      path: articles
+    cache_metadata:
+      max-age: -1
+      contexts:
+        - 'languages:language_content'
+        - 'languages:language_interface'
+        - url
+        - url.query_args
+        - 'user.node_grants:view'
+        - user.permissions
+      tags: {  }
diff --git a/tests/modules/pathauto_views_test/pathauto_views_test.info.yml b/tests/modules/pathauto_views_test/pathauto_views_test.info.yml
new file mode 100644
index 0000000..3392573
--- /dev/null
+++ b/tests/modules/pathauto_views_test/pathauto_views_test.info.yml
@@ -0,0 +1,8 @@
+name: 'Views Test Config'
+type: module
+description: 'Provides default views for tests.'
+package: Testing
+version: VERSION
+core: 8.x
+dependencies:
+  - views